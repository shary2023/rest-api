openapi: 3.0.3
info:
  title: 'SHARY - Regular'
  description: Регулярные выражения
  version: 2.0.0
paths: {}

components:
  schemas:
    FullRegularSchema:                                                      # - All Regular
      allOf:
        - $ref: '#/components/schemas/EmailRegularSchema'                   # Email
        - $ref: '#/components/schemas/InnRegularSchema'                     # INN
        - $ref: '#/components/schemas/PhoneNumberRegularSchema'             # Phone number
        - $ref: '#/components/schemas/PassportRegularSchema'                # Passport


    PassportRegularSchema:                                                  # - Passport
      allOf:
        - $ref: '#/components/schemas/PassportNumberRegularSchema'          # Passport number
        - $ref: '#/components/schemas/PassportSeriesRegularSchema'          # Passport series

      type: object

    FullNameRegularSchema:                                                  # - Full name
      allOf:
        - $ref: '#/components/schemas/FirstNameRegularSchema'               # First name
        - $ref: '#/components/schemas/SecondNameRegularSchema'              # Second name
        - $ref: '#/components/schemas/GivenNameRegularSchema'               # Given name

      type: object

    FirstNameRegularSchema:                                                 # First Name
      type: object
      properties:
        firstName:
          type: string
          pattern: "^[a-zA-ZА-Яа-я]{2,50}$"

    SecondNameRegularSchema:                                                # Second Name
      type: object
      properties:
        secondName:
          type: string
          pattern: "^[a-zA-ZА-Яа-я]{2,50}$"

    GivenNameRegularSchema:                                                 # Given Name
      type: object
      properties:
        secondName:
          type: string
          pattern: "^[a-zA-ZА-Яа-я]{0,50}$"

    EmailRegularSchema:                                                     # Email
      type: object
      properties:
        email:
          type: string
          pattern: '/^[A-Z0-9._%+-]+@[A-Z0-9-]+.+.[A-Z]{2,4}$/i'
          example: "user@example.com"

    InnRegularSchema:                                                       # INN
      type: object
      properties:
        inn:
          type: string
          pattern: '^(([0-9]{12})|([0-9]{10}))?$'
          example: "123453488322"

    PassportNumberRegularSchema:                                            # Passport number
      type: object
      properties:
        passportNumber:
          type: string
          pattern: '^([0-9]{6})?$'
          example: '454322'

    PassportSeriesRegularSchema:                                            # Passport series
      type: object
      properties:
        passportSeries:
          type: string
          pattern: '^([0-9]{2}\s{0,1}[0-9]{2})?$'
          example: '6282 or 62 82'

    PhoneNumberRegularSchema:                                               # Phone number
      type: object
      properties:
        phoneNumber:
          type: string
          pattern: '^((8|\+7)[\- ]?)?(\(?\d{3}\)?[\- ]?)?[\d\- ]{7,10}$'
          example: "+79008883322"
